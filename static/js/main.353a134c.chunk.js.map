{"version":3,"sources":["Dropdown.js","TestData.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","header","multiselect","subject","items","showIcons","selections","onChange","useState","isToggled","setIsToggled","isAllSelected","setIsAllSelected","domNode","handler","useRef","useEffect","outsideClickHandler","event","current","contains","target","document","addEventListener","removeEventListener","useClickOutside","ref","className","onClick","map","a","id","length","i","label","removedItemId","newSelections","filter","handleRemoveItem","it","findIndex","sel","item","addedItemId","handleAddItem","src","image","movies","songs","cities","colors","foods","App","selectedColors","setSelectedColors","selectedFoods","setSelectedFoods","selectedMovies","setSelectedMovies","selectedSongs","setSelectedSongs","selectedCities","setSelectedCities","ob","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.353a134c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nlet useClickOutside = (handler) => {\n  let domNode = useRef()\n\n  useEffect(() => {\n    let outsideClickHandler = (event) => {\n      // check if the dropdown domNode was the node that was just clicked\n      if (!domNode.current.contains(event.target)) {\n        handler()\n      }\n    }\n\n    document.addEventListener(\"mousedown\", outsideClickHandler)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", outsideClickHandler)\n    }\n  })\n\n  return domNode\n}\n\nfunction Dropdown (props) {\n  const { header, multiselect, subject, items, showIcons, selections, onChange } = props\n\n  const [isToggled, setIsToggled] = useState(false)\n  const [isAllSelected, setIsAllSelected] = useState(false)\n\n  const handleAddItem = (addedItemId) => {\n    if (onChange) {\n      let newSelections = multiselect ? [...selections, addedItemId] : [addedItemId]\n      onChange(newSelections)\n      // check \"all-selected\" box if all items are now selected\n      if (newSelections.length === items.length) {\n        setIsAllSelected(true)\n      }\n    }\n  }\n\n  const handleRemoveItem = (removedItemId) => {\n    if (onChange) {\n      let newSelections = selections.filter(i => i !== removedItemId)\n      onChange(newSelections)\n      // uncheck \"all-selected\" box if all items are no longer selected\n      if (newSelections.length !== items.length) {\n        setIsAllSelected(false)\n      }\n    }\n  }\n\n  const handleSelectAll = () => {\n    if (onChange) {\n      setIsAllSelected(!isAllSelected)\n      onChange(items.map(a => a.id))\n    }\n  }\n\n  const handleDeselectAll = () => {\n    if (onChange) {\n      setIsAllSelected(!isAllSelected)\n      onChange([])\n    }\n  }\n\n  let domNode = useClickOutside(() => {\n    setIsToggled(false)\n  })\n\n  // build dropdown\n  return (\n    <div ref={domNode} className=\"dropdown-container\">\n      {header ? <h2>{header}</h2> : null}\n      \n      <div className=\"dropdown-input\">\n        <span onClick={() => setIsToggled(!isToggled)}>\n          <i className={`angle ${isToggled ? \"up\" : \"down\"} icon`}></i>\n        </span>\n        {multiselect\n          ? <span onClick={isAllSelected ? handleDeselectAll : handleSelectAll}>\n              <i className={`${isAllSelected ? \"check circle\" : \"circle outline\"} icon`}></i>\n            </span>\n          : null\n        }\n        <div className=\"dropdown-values\">\n          {selections.length \n            ? selections.map(i => \n                <div key={i} className=\"dropdown-value\"> \n                  {`${items[i].label} `} \n                  <span className=\"dropdown-remove\" onClick={() => handleRemoveItem(i)}>\n                    <i className=\"grey close icon\"></i>\n                  </span>\n                </div>) \n            : <div onClick={() => setIsToggled(!isToggled)} className=\"dropdown-placeholder\">\n                Select {`${subject ? subject : \"item\"}${multiselect ? \"(s)\" : \"\"}`}\n              </div> \n          }\n        </div>\n      </div>\n\n      <div className={`dropdown-options ${isToggled ? \"dropdown-active\" : \"\"}`}>\n        {items.filter(it => selections.findIndex(sel => sel === it.id) === -1).map(item =>\n          <div className=\"dropdown-item\" key={item.id} onClick={() => handleAddItem(item.id)}>\n            {showIcons\n              ? <img src={item.image}/>\n              : null\n            }\n            {item.label}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Dropdown","// Example Data:\n\n// Movies to populate in a dropdown\nconst movies = [\n    {\n      id: 0,\n      label: 'Braveheart',\n      image: 'https://upload.wikimedia.org/wikipedia/en/5/55/Braveheart_imp.jpg'\n    },\n    {\n      id: 1,\n      label: 'Die Hard',\n      image: 'https://upload.wikimedia.org/wikipedia/en/7/7e/Die_hard.jpg'\n    },\n    {\n      id: 2,\n      label: 'Gladiator',\n      image: 'https://upload.wikimedia.org/wikipedia/en/f/fb/Gladiator_%282000_film_poster%29.png'\n    },\n    {\n      id: 3,\n      label: 'The Lord of the Rings: The Return of the King',\n      image: 'https://upload.wikimedia.org/wikipedia/en/b/be/The_Lord_of_the_Rings_-_The_Return_of_the_King_%282003%29.jpg'\n    },\n    {\n      id: 4,\n      label: 'The Dark Knight',\n      image: 'https://upload.wikimedia.org/wikipedia/en/8/8a/Dark_Knight.jpg'\n    },\n    {\n      id: 5,\n      label: 'Raider of the Lost Ark',\n      image: 'https://upload.wikimedia.org/wikipedia/en/4/4c/Raiders_of_the_Lost_Ark.jpg'\n    },\n    {\n      id: 6,\n      label: 'The Lion King',\n      image: 'https://upload.wikimedia.org/wikipedia/en/3/3d/The_Lion_King_poster.jpg'\n    },\n    {\n      id: 7,\n      label: 'Toy Story',\n      image: 'https://upload.wikimedia.org/wikipedia/en/1/13/Toy_Story.jpg'\n    },\n    {\n      id: 8,\n      label: 'Beauty and the Beast',\n      image: 'https://upload.wikimedia.org/wikipedia/en/7/7c/Beautybeastposter.jpg'\n    },\n    {\n      id: 9,\n      label: 'Titanic',\n      image: 'https://upload.wikimedia.org/wikipedia/en/1/19/Titanic_%28Official_Film_Poster%29.png'\n    },\n    {\n      id: 10,\n      label: 'Pirates of the Caribbean: The Curse of the Black Pearl',\n      image: 'https://upload.wikimedia.org/wikipedia/en/8/89/Pirates_of_the_Caribbean_-_The_Curse_of_the_Black_Pearl.png'\n    },\n    {\n      id: 11,\n      label: 'E.T. the Extra-Terrestrial',\n      image: 'https://upload.wikimedia.org/wikipedia/en/6/66/E_t_the_extra_terrestrial_ver3.jpg'\n    },\n    {\n      id: 12,\n      label: 'Jaws',\n      image: 'https://upload.wikimedia.org/wikipedia/en/6/66/E_t_the_extra_terrestrial_ver3.jpg'\n    },\n    {\n      id: 13,\n      label: 'The Notebook',\n      image: 'https://upload.wikimedia.org/wikipedia/en/8/86/Posternotebook.jpg'\n    },\n    {\n      id: 14,\n      label: 'Gone with the Wind',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/2/27/Poster_-_Gone_With_the_Wind_01.jpg'\n    },\n    {\n      id: 15,\n      label: 'The Shawshank Redemption',\n      image: 'https://upload.wikimedia.org/wikipedia/en/8/81/ShawshankRedemptionMoviePoster.jpg'\n    },\n    {\n      id: 16,\n      label: 'Kung Fu Panda',\n      image: 'https://upload.wikimedia.org/wikipedia/en/7/76/Kungfupanda.jpg'\n    },\n    {\n      id: 17,\n      label: 'The Last Samurai',\n      image: 'https://upload.wikimedia.org/wikipedia/en/c/c6/The_Last_Samurai.jpg'\n    },\n    {\n      id: 18,\n      label: 'Your Name',\n      image: 'https://upload.wikimedia.org/wikipedia/en/0/0b/Your_Name_poster.png'\n    },\n    {\n      id: 19,\n      label: 'Weathering With You',\n      image: 'https://upload.wikimedia.org/wikipedia/en/6/66/Weathering_with_You_Poster.jpg'\n    }\n  ]\n  \n  // Songs to populate in a dropdown\n  const songs = [\n    {\n      id: 0,\n      label: 'Perfect',\n      image: 'https://upload.wikimedia.org/wikipedia/en/8/80/Ed_Sheeran_Perfect_Single_cover.jpg'\n    },\n    {\n      id: 1,\n      label: 'Believer',\n      image: 'https://upload.wikimedia.org/wikipedia/en/5/5c/Imagine-Dragons-Believer-art.jpg'\n    },\n    {\n      id: 2,\n      label: 'Gone, Gone, Gone',\n      image: 'https://upload.wikimedia.org/wikipedia/en/1/10/Phillip_Phillips_Gone%2C_Gone%2C_Gone_single_cover.jpg.png'\n    },\n    {\n      id: 3,\n      label: '7 years',\n      image: 'https://upload.wikimedia.org/wikipedia/en/b/bc/7-Years-by-Lukas-Graham.jpg'\n    },\n    {\n      id: 4,\n      label: 'My Way',\n      image: 'https://upload.wikimedia.org/wikipedia/en/b/b2/My_Way_-_Frank_Sinatra.jpg'\n    }\n  ]\n  \n  // Cities to populate in a dropdown\n  const cities = [\n    {\n      id: 0,\n      label: 'Dallas',\n    },\n    {\n      id: 1,\n      label: 'Austin',\n    },\n    {\n      id: 2,\n      label: 'San Antonio',\n    },\n    {\n      id: 3,\n      label: 'Houston',\n    },\n    {\n      id: 4,\n      label: 'Waco',\n    },\n    {\n      id: 5,\n      label: 'Lubbock',\n    },\n    {\n      id: 6,\n      label: 'El Paso',\n    },\n    {\n      id: 7,\n      label: 'Amarillo',\n    },\n    {\n      id: 8,\n      label: 'Galveston',\n    },\n    {\n      id: 9,\n      label: 'Fort Worth',\n    }\n  ]\n\n  // Songs to populate in a dropdown\n  const colors = [\n    {\n      id: 0,\n      label: 'Red',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/2/25/Red.svg'\n    },\n    {\n      id: 1,\n      label: 'Blue',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Solid_blue.svg'\n    },\n    {\n      id: 2,\n      label: 'Green',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/f/f3/Green.PNG'\n    },\n    {\n      id: 3,\n      label: 'Yellow',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/4/44/WO_Yellow.jpg'\n    },\n    {\n      id: 4,\n      label: 'Purple',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/e/e2/Cobaltviolet.jpg'\n    }\n  ]\n\n  // Foods to populate in a dropdown\n  const foods = [\n    {\n      id: 0,\n      label: 'Pizza',\n    },\n    {\n      id: 1,\n      label: 'Rice',\n    },\n    {\n      id: 2,\n      label: 'Noodles',\n    },\n    {\n      id: 3,\n      label: 'Fried Chicken',\n    },\n    {\n      id: 4,\n      label: 'Fajitas',\n    },\n    {\n      id: 5,\n      label: 'Donuts',\n    },\n    {\n      id: 6,\n      label: 'Ice Cream',\n    },\n    {\n      id: 7,\n      label: 'Pasta',\n    },\n    {\n      id: 8,\n      label: 'Soup',\n    },\n    {\n      id: 9,\n      label: 'Chips',\n    }\n  ]\n\n  export { movies, songs, cities, colors, foods }","import React, { useState } from 'react'\nimport './App.css'\nimport Dropdown from './Dropdown'\nimport { movies, songs, cities, colors, foods } from './TestData'\n\nfunction App () {\n  // state for each dropdown to keep track of its selected items\n  const [selectedColors, setSelectedColors] = useState([])\n  const [selectedFoods, setSelectedFoods] = useState([])\n  const [selectedMovies, setSelectedMovies] = useState([])\n  const [selectedSongs, setSelectedSongs] = useState([])\n  const [selectedCities, setSelectedCities] = useState([])\n\n  // create 3 dropdowns using example data from TestData.js, specify props for each dropdown. header, multiselect, subject, showIcons props are optional\n  // omitting header prop results in no label above dropdown\n  // omitting multiselect prop results in default value of false\n  // omitting subject prop results in default value of \"item\"\n  // omitting showIcons prop results in default value of false\n  return (\n    <div className=\"app\">\n      <div id=\"demo-logo\"></div>\n      <div className=\"app-dropdowns\">\n        <Dropdown header=\"Favorite Color\" multiselect={false} subject=\"color\" showIcons={true} items={colors} selections={selectedColors} onChange={(ob) => setSelectedColors(ob)}/>\n        <Dropdown header=\"Favorite Food\" multiselect={false} subject=\"food\" showIcons={false} items={foods} selections={selectedFoods} onChange={(ob) => setSelectedFoods(ob)}/>\n      </div>\n      <div className=\"app-dropdowns\">\n        <Dropdown header=\"Movie Collection\" multiselect={true} subject=\"movie\" showIcons={true} items={movies} selections={selectedMovies} onChange={(ob) => setSelectedMovies(ob)}/>\n        <Dropdown header=\"Song Collection\" multiselect={true} subject=\"song\" showIcons={true} items={songs} selections={selectedSongs} onChange={(ob) => setSelectedSongs(ob)}/>\n        <Dropdown header=\"Visited Cities\" multiselect={true} subject=\"city\" showIcons={false} items={cities} selections={selectedCities} onChange={(ob) => setSelectedCities(ob)}/>\n      </div>\n\n      {/* view console in Chrome to verify that indices of selected items are stored appropriately for access*/}\n      {console.log(\"Selected IDs - Movies:\", selectedMovies, \"Songs:\", selectedSongs, \"Cities\", selectedCities)}\n      {console.log(\"Selected IDs - Colors:\", selectedColors, \"Foods:\", selectedFoods)}\n\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}